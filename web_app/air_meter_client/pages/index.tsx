import Head from 'next/head';
import React, {useEffect, useMemo, useState} from 'react';
import {useRecoilValue} from 'recoil';
import {
    earliestReadTime,
    publisherList,
    readingCursorSet,
    readingRangesList,
    useSensorReadingsAPI,
    latestReadout,
} from '../lib/state/sensors';
import RelayWS from '../lib/WebSocket';
import styles from '../styles/Home.module.css';

const isProd = process.env.NODE_ENV === 'production';

function Subscribe({deviceId}: {deviceId: number}) {
    return (
        <button
            onClick={() => RelayWS.sendJoin(deviceId)}
            className="px-4 py-2 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-blue-600 rounded-md dark:bg-gray-800 hover:bg-blue-500 dark:hover:bg-gray-700 focus:outline-none focus:bg-blue-500 dark:focus:bg-gray-700"
        >
            Subscribe
        </button>
    );
}

function LoadMore() {
    // cursor atom list contains read_time of first reading received from /reading msgs i.e "start_time|+"
    // that cursor + pub_id accesses atomFamily appended to from /reading msgs
    // this button requests load history before "start_time|+"
    // cursor of response appended to cursor atom list, data added to atomFamily
    // access atom list of cursors based on range i.e "start_time|end_time"[]
    // DeviceCard iterates over cursors, displaying cursors with data
    return <button>Load More</button>;
}

function DeviceCard({deviceId}: {deviceId: number}) {
    const data = useRecoilValue(subscribedData(deviceId));
    return (
        <div className={styles.grid}>
            <h2>Id: {deviceId}</h2>
            {data !== null && (
                <>
                    <LoadMore />
                    <pre>{data}</pre>
                </>
            )}
            {data === null && <Subscribe deviceId={deviceId} />}
        </div>
    );
}

function DeviceGrid() {
    const list = useRecoilValue(publisherList);
    return (
        <>
            {list.map((id) => (
                <DeviceCard key={id} deviceId={id} />
            ))}
        </>
    );
}

export default function Home() {
    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link
                    rel="icon"
                    href={`${isProd ? '/static' : ''}/favicon.ico`}
                />
            </Head>

            <main className={styles.main}>
                <h2>Devices</h2>
                <div className={styles.grid}>
                    <DeviceGrid />
                    <br />
                </div>
            </main>

            <footer className={styles.footer}>
                <a
                    href="http://memes"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    Powered by{' '}
                    <span className={styles.logo}>
                        <img
                            src="/amogus.jpg"
                            alt="Memes"
                            width={30}
                            height={30}
                        />
                    </span>
                </a>
            </footer>
        </div>
    );
}
